<!--
  Resource dictionary that defines the look and behavior of the applications chrome
-->
<NavigationWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ScePhoto="clr-namespace:ScePhoto;assembly=ScePhoto"
    xmlns:ScePhotoData="clr-namespace:ScePhoto.Data;assembly=ScePhoto"
    xmlns:ScePhotoControls="clr-namespace:ScePhoto.Controls;assembly=ScePhoto"
    xmlns:aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"  
    xmlns:Local="clr-namespace:ScePhotoViewer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2006" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"  
    x:Class="ScePhotoViewer.MainWindow"
    Title="ScePhotoViewer - A Microsoft Syndicated Client Sample Application"
    ShowsNavigationUI="False"
    Background="{StaticResource Background_ChromeDefault}"
    AutomationProperties.AutomationId="Chrome"
    MinWidth="480" MinHeight="360">
    <NavigationWindow.Content>
        <Grid>
            <Grid.Resources>
                <Local:DateTimeToStringConverter x:Key="DateTimeConverter" />
                <Style x:Key="BrowseButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                                <Grid Background="#00FFFFFF">
                                    <Viewbox RenderTransformOrigin="0.5,0.5" x:Name="Arrow" OpacityMask="{x:Null}">
                                        <Canvas Width="27.1293" Height="30.3003" x:Name="canvas" Background="{x:Null}">
                                            <Path x:Name="ArrowRoot" Width="27.1292" Height="30.3003" Canvas.Left="7.68602e-005" Canvas.Top="1.5825e-005" Stretch="Fill" Data="M0.333374,15.1501 L26.7958,0.333313 C26.814947,0.90017135 26.564945,28.900436 26.796,29.967 L0.333374,15.1501 z"
                                                  StrokeThickness="0.666594" StrokeLineJoin="Round" Stroke="{StaticResource Stroke_ChromeUIDefault}"
                                                  Fill="{StaticResource Fill_ChromeUIDefault}"/>
                                            <Path x:Name="Fake" Width="27.1292" Height="30.3003" Canvas.Left="7.68602e-005" Canvas.Top="1.5825e-005" Stretch="Fill" Data="M0.333374,15.1501 L26.7958,0.333313 C26.814947,0.90017135 26.564945,28.900436 26.796,29.967 L0.333374,15.1501 z" 
                                                  StrokeThickness="0.6" StrokeLineJoin="Round" Stroke="#FF000000"
                                                  Fill="#FFFFFFFF" Opacity="0"/>
                                            <Path x:Name="GlassyOverlay" Width="26.4625" Height="16.0705" Canvas.Left="0.333374" Canvas.Top="0.333313" Stretch="Fill" 
                                                  Data="M1.2886225,15.533283 L26.491389,1.2040479 C26.510901,1.0087313 26.686344,16.066371 26.426235,16.066465 18.112402,15.2667 7.47437,14.7217 2.57239,16.4038 L1.3535771,15.59993 z" 
                                                  StrokeThickness="1" StrokeLineJoin="Round" Stroke="{StaticResource Stroke_ChromeUIBevel}"
                                                  Fill="{StaticResource Fill_ChromeUIBevel}"/>
                                        </Canvas>
                                    </Viewbox>
                                </Grid>

                                <!--Each state sets a brush on the Border in the template -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" TargetName="Fake" Value="0.3"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Opacity" TargetName="Fake" Value="0.01"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused" Value="True">
                                        <Setter Property="BitmapEffect" Value="{StaticResource FocusedVisualGlow}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style TargetType="{x:Type ToggleButton}" x:Key="FullScreenButton">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border Opacity="0.5" x:Name="Border" BorderThickness="1" CornerRadius="2" BorderBrush="#FFDB8715" Margin="{TemplateBinding Margin}">
                                    <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ToggleButton KeyboardNavigation.TabIndex="100000" Style="{StaticResource FullScreenButton}" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.ColumnSpan="3" Panel.ZIndex="20"
                                      IsChecked="{Binding Path=FullScreenMode, RelativeSource={RelativeSource AncestorType={x:Type Local:MainWindow}}, Mode=OneWay}"
                                      Command="Local:MainWindow.SwitchFullScreenModeCommand" Focusable="True" KeyboardNavigation.IsTabStop="True" ToolTip="Toggle Full Screen">
                <Image>
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOn.png"/>
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter Property="Opacity" Value="0.5"/>
                            <Setter Property="Height" Value="18"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOnHighlight.png"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsKeyboardFocused}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOnHighlight.png"/>
                                        <Setter Property="BitmapEffect" Value="{StaticResource FocusedVisualGlow}"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOff.png"/>
                                        <Setter Property="Margin" Value="0,5,0,0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsMouseOver}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOffHighlight.png"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                        <Setter Property="Margin" Value="0,5,0,0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsKeyboardFocused}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Source" Value="pack://application:,,,/Resources/Images/FullScreenOffHighlight.png"/>
                                        <Setter Property="BitmapEffect" Value="{StaticResource FocusedVisualGlow}"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                        <Setter Property="Margin" Value="0,5,0,0"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </ToggleButton>

            <!--This border houses the main title bar-->
            <Border Grid.Row="0" Grid.ColumnSpan="3" BorderThickness="0,0,0,0" Background="{StaticResource Background_Masthead}">
                <Grid Margin="10,5,10,15">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,5,0,2">
                        <Image Source="pack://application:,,,/Resources/Images/ScePhotoViewer.png">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Height" Value="30"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type Local:MainWindow}}}" Value="Collapsed">
                                            <Setter Property="Height" Value="23"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="3,0,30,0" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type Local:MainWindow}}}">
                        <Button x:Name="BrowseBackButton" Content="Browse Back" Style="{StaticResource BrowseButtonStyle}" 
                                    Width="24" Height="24" Command="NavigationCommands.BrowseBack"
                                    AutomationProperties.AutomationId="BrowseBack"/>
                        <Button x:Name="BrowseForwardButton" Content="Browse Forward" Style="{StaticResource BrowseButtonStyle}"
                                    Width="24" Height="24" RenderTransformOrigin="0.5,0.5" Margin="15,0,0,0"
                                    Command="NavigationCommands.BrowseForward" AutomationProperties.AutomationId="BrowseForward">
                            <Button.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Button.RenderTransform>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="2" Grid.RowSpan="2" HorizontalAlignment="Right" Margin="0,-15,0,-15" VerticalAlignment="Center" Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type Local:MainWindow}}}">
                        <Control Style="{StaticResource SyncControlStyle}" HorizontalAlignment="Right" Margin="0,0,0,5" VerticalAlignment="Center" Width="170"/>
                        <Local:SearchControl x:Name="SearchControl" Style="{StaticResource SearchControlStyle}" HorizontalAlignment="Right" Height="24" ToolTip="Enter your search here" d:IsHidden="True" Focusable="False" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Visibility="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type Local:MainWindow}}}">
                        <ScePhotoControls:PhotoGalleryAlbumSelector  TabIndex="10" FocusVisualStyle="{x:Null}" x:Name="BreadcrumbBar"/>
                    </StackPanel>
                </Grid>
            </Border>

            <!-- Fake bevel effect -->
            <Grid Grid.Row="1" Grid.Column="1" Margin="5,-5,5,5">
                <Border Margin="0,-8,-230,0" BorderThickness="0,8,0,0" Height="10"  CornerRadius="0,0,0,0" VerticalAlignment="Top" BorderBrush="{StaticResource Brush_HorizontalBevelGradient}"/>
                <Border Margin="-8,0,-10,-5" Width="10" BorderThickness="8,0,0,0" CornerRadius="0,0,0,0" HorizontalAlignment="Left" BorderBrush="{StaticResource Brush_VerticalBevelGradient}">
                </Border>
                <Ellipse HorizontalAlignment="Left" Margin="-8,-8,0,0" VerticalAlignment="Top" Width="16" Height="16" Clip="M0,0 L8,0 L8,8 L0,8 z" Fill="{StaticResource Brush_RadialBevelGradient}">
                </Ellipse>
                <!-- Frame that holds the content -->
                <ScePhotoControls:MainContentContainer Margin="0,0,0,-5" AutomationProperties.AutomationId="ContentPane" x:Name="ContentPane" KeyboardNavigation.IsTabStop="False" KeyboardNavigation.DirectionalNavigation="None"
                                                       Background="{StaticResource Background_MainContentContainer}" BorderBrush="Black" />
            </Grid>
            <ContentControl Content="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=Dialog}" 
                            Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Grid.ColumnSpan="3"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                            FocusManager.IsFocusScope="True"
                            KeyboardNavigation.TabNavigation="Cycle"
                            KeyboardNavigation.ControlTabNavigation="Cycle"
                            KeyboardNavigation.DirectionalNavigation="Contained">
                <ContentControl.Style>
                    <Style TargetType="{x:Type ContentControl}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ContentControl}">
                                    <Border Background="{TemplateBinding Background}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Content="{TemplateBinding Content}"
                                                          AutomationProperties.AutomationId="DialogPane"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Visibility" Value="Visible"/>
                        <Setter Property="IsEnabled" Value="True"/>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="#CC000000" />
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Content" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Setter Property="IsEnabled" Value="False"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ContentControl.Style>
            </ContentControl>
        </Grid>
    </NavigationWindow.Content>
</NavigationWindow>
