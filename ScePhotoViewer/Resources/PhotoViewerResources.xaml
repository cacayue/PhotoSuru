<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ScePhotoControls="clr-namespace:ScePhoto.Controls;assembly=ScePhoto"
                    xmlns:ScePhotoViewer="clr-namespace:ScePhotoViewer"
                    xmlns:ScePhoto="clr-namespace:ScePhoto;assembly=ScePhoto"
                    xmlns:EffectLibraryControls="clr-namespace:EffectControls;assembly=EffectLibrary">

    <!-- Converter used for triggering on values that are greater than, or equal to, the value passed as a parameter -->
    <ScePhotoViewer:ValueGreaterOrEqualConverter x:Key="ValueGreaterOrEqualConverter"/>

    <!-- Converter to clean HTML formatting out of displayed text -->
    <ScePhotoViewer:HtmlToCleanStringConverter x:Key="HtmlToCleanStringConverter"/>

    <!-- Converter to convert the integer IDs of the photo's tags to text -->
    <ScePhotoViewer:PhotoTagIDsToStringConverter x:Key="PhotoTagIDsToStringConverter"/>

    <!-- Converter to convert a single tag ID to text -->
    <ScePhotoViewer:SingleTagIdToStringConverter x:Key="SingleTagIdToStringConverter"/>

    <!-- Converter to convert a Nullable<bool> to a Visibility -->
    <ScePhotoViewer:NullableBoolToVisibilityConverter x:Key="NullableBoolToVisibilityConverter"/>

    <!-- Converter to format the application dates consistently -->
    <ScePhotoViewer:DateTimeToStringConverter x:Key="DateTimeConverter"/>

    <Style x:Key="DropCapFigureStyle" TargetType="{x:Type Figure}">
        <Setter Property="VerticalAnchor" Value="ContentTop" />
        <Setter Property="HorizontalAnchor" Value="ContentLeft" />
        <Setter Property="Height" Value="105" />
        <Setter Property="Margin" Value="0,0,3,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="VerticalOffset" Value="-29"/>
    </Style>
    <Style x:Key="DropCapTextStyle" TargetType="{x:Type Run}">
        <Setter Property="FontSize" Value="74pt" />
        <Setter Property="FontFamily" Value="Palatino Linotype" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#90993C" />
        <Setter Property="Typography.DiscretionaryLigatures" Value="True" />
    </Style>
    <Style x:Key="DropCapParaStyle" TargetType="{x:Type Paragraph}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <!-- Converter to convert the ZoomFactor of a photo to the appropriate BitmapScalingMode for best quality -->
    <ScePhotoViewer:PhotoZoomFactorToBitmapScalingModeConverter x:Key="PhotoZoomFactorToBitmapScalingModeConverter"/>

    <!-- Styling for toolbar popups -->
    <Style TargetType="{x:Type Border}" x:Key="PhotoViewerToolbarPopup">
        <Setter Property="Background" Value="#222222"/>
        <Setter Property="BorderBrush" Value="#595959"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Canvas.Left" Value="50"/>
        <Setter Property="Panel.ZIndex" Value="5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Width" Value="150"/>
    </Style>

    <!-- Style for the close 'X' on a popup -->
    <Style TargetType="{x:Type Hyperlink}" x:Key="PhotoViewerToolbarPopupCloseLink">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="Consolas"/>
        <Setter Property="Foreground" Value="#777777"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#AAAAAA"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox style for textboxes used in toolbar popups -->
    <Style TargetType="{x:Type TextBox}" x:Key="PhotoViewerToolbarPopupTextBox">
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Foreground" Value="#DDDDDD"/>
        <Setter Property="BorderBrush" Value="#777777"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ContentHost"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for buttons (thumbnails) in the film strip -->
    <Style x:Key="FilmStripThumbnailButton" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="ButtonBorder" RenderTransformOrigin="0.5,0.5" CornerRadius="3" BorderBrush="#00BE7501" BorderThickness="1">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#00F6DEA4" Offset="0"/>
                                <GradientStop Color="#00A25C00" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ContentPresenter/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}"  Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0400000" Value="1.25" KeySpline="0.125,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0700000" Value="1.15"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0400000" Value="1.25" KeySpline="0.125,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.0700000" Value="1.15"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2200000" Value="1.025" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="ButtonBorder">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.2200000" Value="1.025" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" TargetName="ButtonBorder">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="#FFF6DEA4" Offset="0"/>
                                            <GradientStop Color="#FFA25C00" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#FFBE7501"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <Setter Property="Background" TargetName="ButtonBorder">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#FFF6DEA4" Offset="0"/>
                                        <GradientStop Color="#FFA25C00" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#FFBE7501"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Data template for photos in the film strip -->
    <DataTemplate x:Key="FilmStripItemTemplate">
        <Button Command="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=NavigationCommands.NavigateToPhotoCommand}" CommandParameter="{Binding}" Style="{StaticResource FilmStripThumbnailButton}" Margin="2,6" Focusable="False">
            <Border BorderBrush="#444444" BorderThickness="1" Margin="3" Focusable="False">
                <Border.ToolTip>
                    <ToolTip Background="#555555" BorderBrush="#999999" BorderThickness="1">
                        <Border BorderBrush="#777777" BorderThickness="1" Margin="4">
                            <ScePhotoControls:LargePhotoThumbnailControl Photo="{Binding}" Height="200" RenderTransformOrigin="0.5,0.5" Focusable="False" />
                        </Border>
                    </ToolTip>
                </Border.ToolTip>
                <ScePhotoControls:PhotoThumbnailControl Photo="{Binding}" Width="60" Height="60" RenderTransformOrigin="0.5,0.5" Focusable="False" />
            </Border>
        </Button>
    </DataTemplate>

    <!-- Colour overrides for the film strip -->
    <Style x:Key="FilmStripStyle">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
        </Style.Resources>
    </Style>

    <!-- Brush used to paint the film strip image. The absolute Viewport height should be similar height compared to the element it is applied to prevent mistiling -->
    <ImageBrush x:Key="FilmStripBrush" ImageSource="pack://application:,,,/Resources/Images/film.png" ViewportUnits="Absolute" Viewport="0,0,497,74" TileMode="Tile" />

    <!-- ItemsPanel used to animate the currently selected photo into view -->
    <ItemsPanelTemplate x:Key="FilmStripPanel">
        <ScePhotoViewer:FilmStripPanel 
            ItemHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScePhotoViewer:FilmStripControl}}, Path=ItemHeight}"
            ItemWidth="{Binding RelativeSource={RelativeSource AncestorType={x:Type ScePhotoViewer:FilmStripControl}}, Path=ItemWidth}"/>
    </ItemsPanelTemplate>

    <!-- Animations for the photos in the film strip -->
    <Style x:Key="FilmStripItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{StaticResource FilmStripBrush}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                        <ContentPresenter Margin="0,2,0,0" x:Name="Presenter" RenderTransformOrigin="0.5,0.5" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Presenter">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.15" KeySpline="0.125,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Presenter">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5" KeySpline="0,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1.15" KeySpline="0.125,0,0.875,1"/>
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1.0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="00:00:00.1000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="Presenter"/>
                                        <DoubleAnimation To="1" Duration="00:00:00.1000000" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="Presenter"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--
            Ensure the ListBoxItem is at the top of the ZIndex on MouseOver or else it will overlap with adjacent ListBoxItems
            when it is zoomed-in during selection. 
            -->
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Panel.ZIndex" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style to collapse text if empty -->
    <Style TargetType="{x:Type TextBlock}" x:Key="CollapseIfEmptyText">
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for photo tag links -->
    <Style TargetType="Hyperlink" x:Key="PhotoTagLink">
        <Setter Property="Foreground" Value="#AAAAAA"/>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#DDDDDD"/>
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Foreground" Value="#DDDDDD"/>
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- The template used for displaying hyperlinked tags -->
    <DataTemplate x:Key="PhotoTagTemplate">
        <TextBlock FontSize="12" Foreground="#AAAAAA" Margin="0,0,4,0">
            <Hyperlink Style="{StaticResource PhotoTagLink}" Command="ScePhotoViewer:PhotoViewerControl.ExploreTagCommand" CommandParameter="{Binding Converter={StaticResource SingleTagIdToStringConverter}}">
                <TextBlock Text="{Binding Converter={StaticResource SingleTagIdToStringConverter}}"/>
            </Hyperlink>
        </TextBlock>
    </DataTemplate>

    <!-- The template used for displaying smaller hyperlinked tags -->
    <DataTemplate x:Key="PhotoTagTemplateSmall">
        <TextBlock FontSize="11" Foreground="#AAAAAA" Margin="0,0,4,0">
            <Hyperlink Style="{StaticResource PhotoTagLink}" Command="ScePhotoViewer:PhotoViewerControl.ExploreTagCommand" CommandParameter="{Binding Converter={StaticResource SingleTagIdToStringConverter}}">
                <TextBlock Text="{Binding Converter={StaticResource SingleTagIdToStringConverter}}"/>
            </Hyperlink>
        </TextBlock>
    </DataTemplate>

    <!-- The template used for displaying hyperlinked tags in a flow document -->
    <DataTemplate x:Key="PhotoTagTemplateFlow">
        <TextBlock TextWrapping="Wrap" IsHyphenationEnabled="False" FontFamily="Arial" FontWeight="Bold" FontSize="10pt" Foreground="White" Margin="2,2,4,2">
            <Hyperlink Style="{StaticResource PhotoTagLink}" Command="ScePhotoViewer:PhotoViewerControl.ExploreTagCommand" CommandParameter="{Binding Converter={StaticResource SingleTagIdToStringConverter}}">
                <TextBlock TextAlignment="Center" Text="{Binding Converter={StaticResource SingleTagIdToStringConverter}}"/>
            </Hyperlink>
        </TextBlock>
    </DataTemplate>

    <!-- The panel template for listing the photo's tags -->
    <ItemsPanelTemplate x:Key="PhotoTagPanel">
        <WrapPanel IsItemsHost="True"/>
    </ItemsPanelTemplate>

    <!-- Control template for the photo viewer toolbar -->
    <Style x:Key="PhotoToolbar" TargetType="{x:Type ScePhotoViewer:PhotoViewerToolbarControl}">
        <!-- Default styles for controls inside the toolbar as style resources -->
        <Style.Resources>
            <!-- Control template for toolbar buttons -->
            <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="#444444" Padding="4,0">
                                <Border x:Name="Border" HorizontalAlignment="Center" CornerRadius="3" Opacity="0.6" Margin="1">
                                    <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#696969" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="#696969" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#909090" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.2" TargetName="Border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Control template for toolbar togglebuttons -->
            <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="#444444" Padding="4,0" Margin="0">
                                <Border x:Name="Border" CornerRadius="3" Opacity="0.6" Margin="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="2">
                                    <ContentPresenter RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#696969" TargetName="Border"/>
                                    <Setter Property="BorderBrush" Value="#696969" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Background" Value="#696969" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#909090" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#555555" TargetName="Border"/>
                                    <Setter Property="Opacity" Value="1" TargetName="Border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Control template for DualImageControl in a toolbar button -->
            <Style x:Key="{x:Type ScePhotoViewer:DualImage}" TargetType="{x:Type ScePhotoViewer:DualImage}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="DisplayAlternateImage" Value="True" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Control template for DualImageControl in a toolbar togglebutton -->
            <Style x:Key="ToggleButtonDualImage" TargetType="{x:Type ScePhotoViewer:DualImage}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="DisplayAlternateImage" Value="True" />
                    </Trigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsChecked}" Value="True">
                        <Setter Property="DisplayAlternateImage" Value="True" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}, Path=IsPressed}" Value="True">
                        <Setter Property="DisplayAlternateImage" Value="True" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- Control template for toolbar separator -->
            <Style x:Key="{x:Type Separator}" TargetType="{x:Type Separator}">
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <StackPanel>
                                <StackPanel Height="11" ClipToBounds="True">
                                    <Border Background="#444444" Height="10" CornerRadius="4">
                                        <Border.RenderTransform>
                                            <TranslateTransform Y="-5" />
                                        </Border.RenderTransform>
                                    </Border>
                                </StackPanel>
                                <StackPanel Height="5" ClipToBounds="True">
                                    <Border Background="#444444" Height="10" CornerRadius="4" />
                                </StackPanel>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Control template for the toolbar expander popup -->
            <Style x:Key="{x:Type Expander}" TargetType="{x:Type Expander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Grid>
                                <ContentPresenter ContentSource="Header" />
                                <Canvas x:Name="Content" Visibility="Collapsed" ClipToBounds="False" Margin="10,-6,0,0">
                                    <Border Style="{StaticResource PhotoViewerToolbarPopup}">
                                        <ContentPresenter />
                                    </Border>
                                </Canvas>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScePhotoViewer:PhotoViewerToolbarControl}">
                    <StackPanel>
                        <!-- Header (bottom half of a separator) -->
                        <StackPanel Height="5" ClipToBounds="True">
                            <Border Background="#444444" Height="10" CornerRadius="4" />
                        </StackPanel>
                        <ItemsPresenter />
                        <!-- Footer (top half of a separator) -->
                        <StackPanel Height="5" ClipToBounds="True">
                            <Border Background="#444444" Height="10" CornerRadius="4">
                                <Border.RenderTransform>
                                    <TranslateTransform Y="-5" />
                                </Border.RenderTransform>
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control template for the photo display control -->
    <Style TargetType="{x:Type ScePhotoViewer:PhotoDisplayControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScePhotoViewer:PhotoDisplayControl}">
                    <Border x:Name="PhotoViewBox" BorderBrush="#444444" BorderThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" Padding="13">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                <GradientStop Color="#111111" Offset="0"/>
                                <GradientStop Color="#0B0B0B" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <Viewbox x:Name="PART_PhotoViewbox" Stretch="Uniform" RenderTransformOrigin="0.5,0.5">
                            <Viewbox.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="PART_PhotoTransitionScaleTransform"/>
                                </TransformGroup>
                            </Viewbox.RenderTransform>
                            <Border x:Name="Photo">
                                <Border.LayoutTransform>
                                    <TransformGroup>
                                        <RotateTransform Angle="{TemplateBinding PhotoDisplayAngle}" x:Name="PART_PhotoDisplayAngleTransform"/>
                                    </TransformGroup>
                                </Border.LayoutTransform>
                                <Grid x:Name="PhotoContainerGrid">
                                    <!-- These Parts must be added in the this order for the Effect to look right -->
                                    <Grid Name="PART_MagnifyEffectHost">
                                        <Grid Name="PART_SwirlEffectHost">
                                            <Grid Name="PART_BandedSwirlEffectHost">
                                                <Grid Name="PART_RippleEffectHost">
                                                    <Grid Name="PART_MonochromeEffectHost">
                                                        <Grid Name="PART_InvertColorEffectHost">
                                                            <Image Source="{TemplateBinding ImageSource}" x:Name="PART_PhotoImage" Height="{Binding Path=ImageSource.Height, RelativeSource={RelativeSource TemplatedParent}}"
                                                                   RenderOptions.BitmapScalingMode="{Binding Path=PhotoZoomFactor, Converter={StaticResource PhotoZoomFactorToBitmapScalingModeConverter}}">
                                                                <Image.LayoutTransform>
                                                                    <ScaleTransform ScaleX="{TemplateBinding PhotoZoomFactor}" ScaleY="{TemplateBinding PhotoZoomFactor}" x:Name="PART_PhotoZoomFactorTransform"/>
                                                                </Image.LayoutTransform>
                                                            </Image>
                                                        </Grid>
                                                    </Grid>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Grid>    
                                </Grid>
                            </Border>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control template for the entire photo viewer control -->
    <Style TargetType="{x:Type ScePhotoViewer:PhotoViewerControl}">
        <Style.Resources>
            <ScePhotoViewer:RotationAngleToSimplePositiveAngleConverter x:Key="AngleConverter"/>
            <ScePhotoViewer:VisibilityToBooleanConverter x:Key="VisibilityConverter"/>
        </Style.Resources>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScePhotoViewer:PhotoViewerControl}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="77"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>


                        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,-2,10,5" Width="260">
                            <Button Style="{DynamicResource OrangeArrowButtonLeftNoShadow}" Width="33" Height="25.3" 
                                    Command="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=NavigationCommands.PreviousPhotoCommand}" 
                                    ToolTip="Previous Photo" AutomationProperties.AutomationId="PreviousStory" AutomationProperties.Name="PreviousStory" />
                            <Label x:Name="PhotoNavTextBlock" Content="Photo" VerticalAlignment="Center" Margin="5,0,5,0" Foreground="{StaticResource Foreground_ChromeTextContrast}"/>
                            <Button Style="{DynamicResource OrangeArrowButtonRightNoShadow}" Width="33" Height="25.3"
                                    Command="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=NavigationCommands.NextPhotoCommand}"
                                    ToolTip="Next Photo" AutomationProperties.AutomationId="NextPhoto" AutomationProperties.Name="NextPhoto" />

                            <!--Divider Panel-->
                            <Grid Width="5" />

                            <!-- Album navigation UI -->
                            <Label Content="Return to Album" VerticalAlignment="Center" Margin="5,0,5,0" Foreground="{StaticResource Foreground_ChromeTextContrast}" />
                            <Button Style="{DynamicResource OrangeEnterButtonNoShadow}" Width="23" Height="35.3" 
                                    Command="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=NavigationCommands.NavigateToParentPhotoAlbumCommand}" 
                                    ToolTip="Return to Album" AutomationProperties.AutomationId="ParentPhotoAlbum" AutomationProperties.Name="ParentPhotoAlbum" />
                        </StackPanel>

                        <!-- Flow Document Viewer -->
                        <Grid x:Name="PART_FlowDescriptionViewer" Grid.Column="1" Grid.Row="1" Background="Black" Visibility="{TemplateBinding PhotoFlowDescriptionVisibility}" Panel.ZIndex="3">
                            <Grid.Resources>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="75"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="30"/>
                            </Grid.RowDefinitions>

                            <Image Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" Opacity=".6" Source="{TemplateBinding ImageSource}" Stretch="UniformToFill"/>
                            <Canvas Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" Grid.RowSpan="3" Background="#BB000000"/>

                            <TextBlock Grid.Column="2" Grid.Row="0" Text="{Binding Path=Photo.Title}" Margin="-110,2,0,0" Typography.DiscretionaryLigatures="True" 
                                       Typography.ContextualLigatures="True" Typography.StandardLigatures="True" Typography.StylisticAlternates="2" Typography.StandardSwashes="1"
                                       FontFamily="./Fonts/#Pescadero" FontSize="46" Foreground="White"/>

                            <Image Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Top" Margin="0,23,0,0" Source="{TemplateBinding ImageSource}" />
                            <Grid Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Bottom" Margin="0,0,0,5">
                                <Border CornerRadius="4" Background="#BB000000"/>
                                <StackPanel Margin="5">
                                    <TextBlock TextAlignment="Center" FontSize="12" Foreground="DarkOrange">- TAGS -</TextBlock>
                                    <ItemsControl ItemsSource="{Binding Path=Photo.PhotoTagIds}" ItemTemplate="{StaticResource PhotoTagTemplateFlow}" ItemsPanel="{StaticResource PhotoTagPanel}" />
                                </StackPanel>
                            </Grid>

                            <DockPanel Margin="20,-15,0,0" Grid.Column="3" Grid.Row="1">
                                <TextBlock Margin="0,0,0,0" FontSize="18" FontFamily="Calibri" Foreground="#C4BC96" Text="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=PhotoGallery.Title}"></TextBlock>
                                <TextBlock Margin="5,0,0,0" FontSize="18" FontFamily="Calibri" Foreground="#C4BC96">|</TextBlock>
                                <TextBlock Margin="5,0,0,0" FontSize="18" FontFamily="Calibri" Foreground="#C4BC96" Text="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Title}"></TextBlock>
                                <TextBlock Margin="10,0,0,0" FontSize="18" FontFamily="Calibri" Foreground="DarkGray" Text="{Binding Path=Photo.PublishDate, Converter={StaticResource DateTimeConverter}}"></TextBlock>
                                <TextBlock Margin="10,0,0,0" FontSize="18" FontFamily="Calibri" Foreground="DarkGray">
                                    <ScePhotoViewer:PhotoViewerHyperlink NavigateUri="{Binding Path=Photo.WebLink}" Foreground="DarkGray">View In Browser</ScePhotoViewer:PhotoViewerHyperlink> 
                                </TextBlock>
                            </DockPanel>

                            <Button Grid.Column="3" Grid.Row="0" Command="ScePhotoViewer:PhotoViewerControl.DisplayPhotoFlowDescriptionCommand" CommandParameter="{Binding}" 
                                    AutomationProperties.AutomationId="ShowFlowDescription" AutomationProperties.Name="ShowFlowDescription"
                                    Width="20" Height="18" HorizontalAlignment="Right" Background="Black" FontWeight="Bold" FontSize="10" 
                                    Foreground="White">X</Button>

                            <ScePhotoViewer:PhotoFlowDescriptionViewer x:Name="PART_PhotoDescriptionViewer" Style="{StaticResource PhotoFlowViewer}" Grid.Column="2" Grid.Row="1" 
                                                                       MinZoom="80" MaxZoom="160" ZoomIncrement="10"   Margin="0,0,0,0" Foreground="#FFFFFFFF" HorizontalAlignment="Right" />
                        </Grid>

                        <!-- Regular Photo Display -->
                        <ScrollViewer x:Name="PhotoScrollViewer" Grid.Column="1" Grid.Row="1" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" Focusable="False">
                            <Grid>
                                <ScePhotoViewer:PhotoDisplayControl x:Name="PART_PhotoDisplay" ContainerWidth="{Binding ElementName=PhotoScrollViewer, Path=ActualWidth}"
                                                                    ContainerHeight="{Binding ElementName=PhotoScrollViewer, Path=ActualHeight}"
                                                                    ImageSource="{TemplateBinding ImageSource}">
                                    <ScePhotoViewer:PhotoDisplayControl.RotatePhotoAnimation>
                                        <DoubleAnimation Duration="0:0:0.3" AccelerationRatio="0.4" DecelerationRatio="0.2" />
                                    </ScePhotoViewer:PhotoDisplayControl.RotatePhotoAnimation>
                                    <ScePhotoViewer:PhotoDisplayControl.ZoomPhotoAnimation>
                                        <DoubleAnimation Duration="0:0:0.15" AccelerationRatio="0.4" DecelerationRatio="0.2" />
                                    </ScePhotoViewer:PhotoDisplayControl.ZoomPhotoAnimation>
                                    <ScePhotoViewer:PhotoDisplayControl.DisplayPhotoAnimation>
                                        <DoubleAnimation Duration="0:0:0.1" AccelerationRatio="0.4" DecelerationRatio="0.2" />
                                    </ScePhotoViewer:PhotoDisplayControl.DisplayPhotoAnimation>
                                </ScePhotoViewer:PhotoDisplayControl>
                                <Border x:Name="PhotoDescription" VerticalAlignment="Center" HorizontalAlignment="Center"
                                        Width="{Binding ElementName=PART_PhotoDisplay, Path=ViewWidth}" Height="{Binding ElementName=PART_PhotoDisplay, Path=ViewHeight}"
                                        Visibility="{TemplateBinding PhotoDescriptionVisibility}">
                                    <Border Background="#BB000000" Padding="10" VerticalAlignment="Bottom">
                                        <StackPanel>
                                            <TextBlock Foreground="White" TextWrapping="Wrap" FontSize="14" VerticalAlignment="Top">
                                                <TextBlock Text="{Binding Path=Photo.Title}" FontWeight="Bold" TextWrapping="Wrap"/>
                                            </TextBlock>
                                            <TextBlock Style="{StaticResource CollapseIfEmptyText}" Text="{Binding Path=Photo.Description}" TextTrimming="WordEllipsis"
                                                       Foreground="White" TextWrapping="Wrap" FontSize="14" MaxHeight="58"/>
                                            <ItemsControl ItemsSource="{Binding Path=Photo.PhotoTagIds}" ItemTemplate="{StaticResource PhotoTagTemplate}" ItemsPanel="{StaticResource PhotoTagPanel}" />
                                            <Button Command="ScePhotoViewer:PhotoViewerControl.DisplayPhotoFlowDescriptionCommand" CommandParameter="{Binding}" AutomationProperties.AutomationId="ShowFlowDescription" x:Name="PART_FlowDescriptionViewerButton" AutomationProperties.Name="ShowFlowDescription"
                                                    Width="50" HorizontalAlignment="Right" Background="Black" Foreground="White">More...</Button>
                                        </StackPanel>
                                    </Border>
                                </Border>
                            </Grid>
                        </ScrollViewer>

                        <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Path=Photo.Title}" FontFamily="Viner Hand ITC" HorizontalAlignment="Center" TextAlignment="Center" FontSize="24" Foreground="#DDDDDD" Margin="260,0,260,2" TextWrapping="Wrap" MaxHeight="80"/>

                        <Grid Grid.Column="0" Grid.Row="1">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="{Binding Path=NavigationUIVisibility, RelativeSource={RelativeSource AncestorType={x:Type ScePhotoViewer:MainWindow}}}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PhotoFlowDescriptionVisibility}" Value="Visible">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <StackPanel>
                            <ScePhotoViewer:PhotoViewerToolbarControl Name="PART_PhotoToolbar" Style="{StaticResource PhotoToolbar}" FocusTarget="{Binding}" Margin="3" SnapsToDevicePixels="True">
                                <Button Command="ScePhotoViewer:PhotoDisplayControl.ZoomPhotoInCommand" CommandParameter="{Binding}" CommandTarget="{Binding ElementName=PART_PhotoDisplay}" 
                                        AutomationProperties.AutomationId="ZoomIn" AutomationProperties.Name="ZoomIn" ToolTip="Zoom the photo in" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/zoomIn.png" AlternateSource="pack://application:,,,/Resources/Images/zoomInHighlight.png" />
                                </Button>
                                <ToggleButton CommandParameter="{Binding}" AutomationProperties.AutomationId="FitPhotoToWindow" AutomationProperties.Name="FitPhotoToWindow" 
                                              ToolTip="Fit the photo to the window size" Padding="3" IsChecked="{Binding ElementName=PART_PhotoDisplay, Path=FittingPhotoToWindow, Mode=TwoWay}" >
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/FitToWindow.png" AlternateSource="pack://application:,,,/Resources/Images/FitToWindowHighlight.png"
                                                              Style="{DynamicResource ToggleButtonDualImage}" />
                                </ToggleButton>
                                <Button Command="ScePhotoViewer:PhotoDisplayControl.ZoomPhotoOutCommand" CommandParameter="{Binding}" CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                                        AutomationProperties.AutomationId="ZoomOut" AutomationProperties.Name="ZoomOut" ToolTip="Zoom the photo out" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/zoomOut.png" AlternateSource="pack://application:,,,/Resources/Images/zoomOutHighlight.png" />
                                </Button>
                                <Separator />
                                <Button Command="ScePhotoViewer:PhotoDisplayControl.RotatePhotoClockwiseCommand" CommandParameter="{Binding}" CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                                        AutomationProperties.AutomationId="RotateClockwise" AutomationProperties.Name="RotateClockwise" ToolTip="Rotate the photo clockwise" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/RotateRight.png" AlternateSource="pack://application:,,,/Resources/Images/RotateRightHighlight.png" />
                                </Button>
                                <Button Command="ScePhotoViewer:PhotoDisplayControl.RotatePhotoCounterClockwiseCommand" CommandParameter="{Binding}" CommandTarget="{Binding ElementName=PART_PhotoDisplay}"
                                        AutomationProperties.AutomationId="RotateCounterClockwise" AutomationProperties.Name="RotateCounterClockwise" ToolTip="Rotate the photo counter-clockwise" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/RotateLeft.png" AlternateSource="pack://application:,,,/Resources/Images/RotateLeftHighlight.png" />
                                </Button>
                                <Separator />
                                <Button Command="ApplicationCommands.Print" 
                                        AutomationProperties.AutomationId="Print" AutomationProperties.Name="Print" ToolTip="Print the photo" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/Print.png" AlternateSource="pack://application:,,,/Resources/Images/PrintHighlight.png" />
                                </Button>
                                <Separator />
                                <Button Command="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=NavigationCommands.NavigateToPhotoSlideShowCommand}" 
                                        ToolTip="Slide Show" AutomationProperties.AutomationId="SlideShow" AutomationProperties.Name="SlideShow" Padding="3">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/SlideShow.png" AlternateSource="pack://application:,,,/Resources/Images/SlideShowMouseOver.png" />
                                </Button>
                                <Separator />
                                <ToggleButton Command="ScePhotoViewer:PhotoViewerControl.DisplayPhotoDescriptionCommand" CommandParameter="{Binding}" x:Name="DescriptionButton"
                                              AutomationProperties.AutomationId="ShowDescription" AutomationProperties.Name="ShowDescription" ToolTip="Show this photo's description"
                                              Padding="3" IsChecked="{Binding Path=PhotoDescriptionVisibility, Converter={StaticResource VisibilityConverter}}">
                                    <ScePhotoViewer:DualImage Height="32" Source="pack://application:,,,/Resources/Images/Description.png" AlternateSource="pack://application:,,,/Resources/Images/DescriptionHighlight.png"
                                                              Style="{DynamicResource ToggleButtonDualImage}" />
                                </ToggleButton>                           
                            </ScePhotoViewer:PhotoViewerToolbarControl>
                            <!-- Effects Toolbar: this is shown using the PART_ToggleEffect button -->
                            <Border CornerRadius="4" Background="#444444" Margin="3" VerticalAlignment="Top" Visibility="{Binding ElementName=PART_ToggleEffect, Path=IsChecked, Converter={StaticResource NullableBoolToVisibilityConverter}}">
                                <StackPanel Margin="3">
                                    <StackPanel.LayoutTransform>
                                        <ScaleTransform ScaleX=".8" ScaleY=".8"/>
                                    </StackPanel.LayoutTransform>
                                    <EffectLibraryControls:SmoothMagnifyControl Name="PART_SmoothMagnifyControl"/>
                                    <EffectLibraryControls:MonochromeControl Name="PART_MonochromeControl"/>
                                    <EffectLibraryControls:InvertColorControl Name="PART_InvertColorControl"/>
                                    <EffectLibraryControls:RippleShaderControl Name="PART_RippleShaderControl"/>
                                    <EffectLibraryControls:SwirlControl Name="PART_SwirlControl"/>
                                    <EffectLibraryControls:BandedSwirlControl Name="PART_BandedSwirlControl"/>
                                </StackPanel>
                            </Border>

                            <ScePhotoViewer:PhotoViewerToolbarControl Style="{StaticResource PhotoToolbar}" FocusTarget="{Binding}" Margin="3" SnapsToDevicePixels="True">
                                <ToggleButton Name="PART_ToggleEffect" Command="ScePhotoViewer:PhotoViewerControl.ToggleEffectCommand" CommandParameter="{Binding}"
                                              AutomationProperties.AutomationId="ToggleEffect" AutomationProperties.Name="ToggleEffect" 
                                              Padding="3" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Center">
                                        <Label.Style>
                                            <Style TargetType="Label">
                                                <Setter Property="FontSize" Value="20"/>
                                                <Setter Property="FontWeight" Value="Bold"/>
                                                <Setter Property="Foreground" Value="#FFD0D0D0"/>
                                                <Style.Triggers>
                                                     <Trigger Property="IsMouseOver" Value="True">
                                                         <Setter Property="Foreground" Value="White"/>
                                                     </Trigger>
                                                     <DataTrigger Binding="{Binding ElementName=PART_ToggleEffect, Path=IsChecked}" Value="False">
                                                         <Setter Property="Content" Value="fx"/>
                                                         <Setter Property="ToolTip" Value="Show the effects panel"/>
                                                         <Setter Property="Height" Value="32"/>
                                                        </DataTrigger>
                                                     <DataTrigger Binding="{Binding ElementName=PART_ToggleEffect, Path=IsChecked}" Value="True">
                                                         <Setter Property="Content" Value="Close fx"/>
                                                         <Setter Property="ToolTip" Value="Close the effects panel"/>
                                                         <Setter Property="FontSize" Value="16"/>
                                                     </DataTrigger>
                                                 </Style.Triggers>
                                             </Style>
                                         </Label.Style>
                                     </Label>
                                 </ToggleButton>
                            </ScePhotoViewer:PhotoViewerToolbarControl>
                            </StackPanel>
                        </Grid>
                        
                        <Grid x:Name="FilmStripBlurEffectArea" Height="72" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <ScePhotoViewer:FilmStripControl
                                ItemsSource="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=ActivePhotoAlbum.Photos}"
                                SelectedItem="{Binding Source={x:Static ScePhoto:ServiceProvider.ViewManager}, Path=ActivePhoto, Mode=OneWay}" 
                                ItemTemplate="{StaticResource FilmStripItemTemplate}" Style="{StaticResource FilmStripStyle}" 
                                Margin="0,-6,0,0" Padding="0" ItemWidth="72" ItemHeight="72"
                                ItemContainerStyle="{StaticResource FilmStripItemStyle}" x:Name="PART_FilmStrip" ItemsPanel="{StaticResource FilmStripPanel}"
                                ScrollViewer.CanContentScroll="True" Focusable="False">
                                <ScePhotoViewer:FilmStripControl.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#00444444"/>
                                        <GradientStop Offset="1" Color="#FF444444"/>
                                    </LinearGradientBrush>
                                </ScePhotoViewer:FilmStripControl.Background>
                            </ScePhotoViewer:FilmStripControl>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=ImageSource, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_PhotoDisplay"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=PhotoFlowDescriptionVisibility, RelativeSource={RelativeSource Self}}" Value="Visible">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PhotoScrollViewer"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsTransitioning, ElementName=PART_PhotoDisplay}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PhotoDescription"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=FittingPhotoToWindow, ElementName=PART_PhotoDisplay}" Value="False">
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" TargetName="PhotoScrollViewer"/>
                            <Setter Property="VerticalScrollBarVisibility" Value="Auto" TargetName="PhotoScrollViewer"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsChecked, ElementName=DescriptionButton}" Value="True">
                            <Setter Property="ToolTip" Value="Hide this photo's description" TargetName="DescriptionButton" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>